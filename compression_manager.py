#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∂–∞—Ç–∏–µ–º —Ñ–∞–π–ª–æ–≤ –∞–Ω–∞–ª–∏–∑–∞
"""

import gzip
import os
from pathlib import Path
from datetime import datetime

def compress_history_files():
    """–°–∂–∏–º–∞–µ—Ç –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –≤ HISTORY/"""
    history_dir = Path('HISTORY')
    
    if not history_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ HISTORY –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    txt_files = list(history_dir.glob("*.txt"))
    
    if not txt_files:
        print("‚ÑπÔ∏è –§–∞–π–ª—ã .txt –¥–ª—è —Å–∂–∞—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    total_original = 0
    total_compressed = 0
    compressed_count = 0
    
    print(f"üóúÔ∏è –ù–∞–π–¥–µ–Ω–æ {len(txt_files)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∂–∞—Ç–∏—è...")
    
    for txt_file in txt_files:
        try:
            # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            content = txt_file.read_text(encoding='utf-8')
            original_size = len(content.encode('utf-8'))
            
            # –°–∂–∏–º–∞–µ–º
            compressed_path = txt_file.with_suffix(txt_file.suffix + '.gz')
            with gzip.open(compressed_path, 'wt', encoding='utf-8') as f:
                f.write(content)
            
            compressed_size = compressed_path.stat().st_size
            compression_ratio = original_size / compressed_size
            
            # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
            txt_file.unlink()
            
            total_original += original_size
            total_compressed += compressed_size
            compressed_count += 1
            
            print(f"‚úÖ {txt_file.name} -> {compressed_path.name} ({compression_ratio:.1f}x)")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∂–∞—Ç–∏–∏ {txt_file.name}: {e}")
    
    if compressed_count > 0:
        overall_ratio = total_original / total_compressed
        savings_mb = (total_original - total_compressed) / 1024 / 1024
        
        print(f"\nüìä –ò–¢–û–ì–ò –°–ñ–ê–¢–ò–Ø:")
        print(f"   –§–∞–π–ª–æ–≤ —Å–∂–∞—Ç–æ: {compressed_count}")
        print(f"   –ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {total_original:,}–±")
        print(f"   –°–∂–∞—Ç—ã–π —Ä–∞–∑–º–µ—Ä: {total_compressed:,}–±")
        print(f"   –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∂–∞—Ç–∏—è: {overall_ratio:.1f}x")
        print(f"   –≠–∫–æ–Ω–æ–º–∏—è: {savings_mb:.2f} –ú–ë")

def decompress_history_files():
    """–†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –≤—Å–µ .gz —Ñ–∞–π–ª—ã –≤ HISTORY/"""
    history_dir = Path('HISTORY')
    
    if not history_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ HISTORY –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    gz_files = list(history_dir.glob("*.gz"))
    
    if not gz_files:
        print("‚ÑπÔ∏è –§–∞–π–ª—ã .gz –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    decompressed_count = 0
    
    print(f"üìÇ –ù–∞–π–¥–µ–Ω–æ {len(gz_files)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏...")
    
    for gz_file in gz_files:
        try:
            # –ß–∏—Ç–∞–µ–º —Å–∂–∞—Ç–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            with gzip.open(gz_file, 'rt', encoding='utf-8') as f:
                content = f.read()
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
            txt_file = gz_file.with_suffix('')  # —É–±–∏—Ä–∞–µ–º .gz
            txt_file.write_text(content, encoding='utf-8')
            
            # –£–¥–∞–ª—è–µ–º —Å–∂–∞—Ç—ã–π —Ñ–∞–π–ª
            gz_file.unlink()
            
            decompressed_count += 1
            print(f"‚úÖ {gz_file.name} -> {txt_file.name}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ {gz_file.name}: {e}")
    
    print(f"\nüìä –†–∞—Å–ø–∞–∫–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {decompressed_count}")

def show_history_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ñ–∞–π–ª–æ–≤ –≤ HISTORY/"""
    history_dir = Path('HISTORY')
    
    if not history_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ HISTORY –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    txt_files = list(history_dir.glob("*.txt"))
    gz_files = list(history_dir.glob("*.gz"))
    
    txt_size = sum(f.stat().st_size for f in txt_files)
    gz_size = sum(f.stat().st_size for f in gz_files)
    total_size = txt_size + gz_size
    
    print(f"üìÅ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ê–ü–ö–ò HISTORY:")
    print(f"   üìÑ .txt —Ñ–∞–π–ª–æ–≤: {len(txt_files)} ({txt_size:,}–±)")
    print(f"   üóúÔ∏è .gz —Ñ–∞–π–ª–æ–≤: {len(gz_files)} ({gz_size:,}–±)")
    print(f"   üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size:,}–± ({total_size/1024/1024:.2f} –ú–ë)")
    
    if txt_files and gz_files:
        print(f"   ‚ö†Ô∏è –°–º–µ—à–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –µ–¥–∏–Ω–æ–º—É")

def enable_compression():
    """–í–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ –≤ –∫–æ–¥–µ"""
    filepath = Path('get_hedge_entry_generator.py')
    
    if not filepath.exists():
        print("‚ùå –§–∞–π–ª get_hedge_entry_generator.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    content = filepath.read_text(encoding='utf-8')
    
    # –ò—â–µ–º –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å–∂–∞—Ç–∏—è
    if '# self._compress_file(filepath)' in content:
        # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –∞–∫—Ç–∏–≤–Ω—É—é
        new_content = content.replace(
            '# self._compress_file(filepath)',
            'self._compress_file(filepath)'
        )
        
        filepath.write_text(new_content, encoding='utf-8')
        print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ –í–ö–õ–Æ–ß–ï–ù–û")
        print("   –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∏–º–∞—Ç—å—Å—è")
    else:
        print("‚ÑπÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def disable_compression():
    """–û—Ç–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ –≤ –∫–æ–¥–µ"""
    filepath = Path('get_hedge_entry_generator.py')
    
    if not filepath.exists():
        print("‚ùå –§–∞–π–ª get_hedge_entry_generator.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    content = filepath.read_text(encoding='utf-8')
    
    # –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å–∂–∞—Ç–∏—è
    if 'self._compress_file(filepath)' in content and '# self._compress_file(filepath)' not in content:
        # –ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º
        new_content = content.replace(
            'self._compress_file(filepath)',
            '# self._compress_file(filepath)'
        )
        
        filepath.write_text(new_content, encoding='utf-8')
        print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ –û–¢–ö–õ–Æ–ß–ï–ù–û") 
        print("   –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ")
    else:
        print("‚ÑπÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ")

def main():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    while True:
        print("\nüóúÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ñ–ê–¢–ò–ï–ú –§–ê–ô–õ–û–í –ê–ù–ê–õ–ò–ó–ê")
        print("="*50)
        print("1. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("2. üóúÔ∏è –°–∂–∞—Ç—å –≤—Å–µ .txt —Ñ–∞–π–ª—ã") 
        print("3. üìÇ –†–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å –≤—Å–µ .gz —Ñ–∞–π–ª—ã")
        print("4. ‚úÖ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å–∂–∞—Ç–∏–µ")
        print("5. ‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å–∂–∞—Ç–∏–µ")
        print("0. üö™ –í—ã—Ö–æ–¥")
        
        choice = input("\nüëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        
        if choice == '1':
            show_history_stats()
        elif choice == '2':
            compress_history_files()
        elif choice == '3':
            decompress_history_files()
        elif choice == '4':
            enable_compression()
        elif choice == '5':
            disable_compression()
        elif choice == '0':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main()