#!/usr/bin/env python3
"""
Migration Script - –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
================================================================

–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ 
–Ω–∞ –µ–¥–∏–Ω—É—é —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É.

–ó–∞–º–µ–Ω—è–µ—Ç:
- state_recovery.py -> unified_sync.py
- orders_synchronizer.py -> unified_sync.py (—á–∞—Å—Ç–∏—á–Ω–æ)
- sync_check.py -> unified_sync.py
- sync_monitor.py -> unified_sync.py

Author: HEDGER
Version: 1.0 - Migration to Unified System
"""

import os
import shutil
from pathlib import Path
from utils import logger


def migrate_to_unified_sync():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    
    print("üîÑ –ü–ï–†–ï–•–û–î –ù–ê –£–ù–ò–§–ò–¶–ò–†–û–í–ê–ù–ù–£–Æ –°–ò–°–¢–ï–ú–£ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("=" * 80)
    
    # –§–∞–π–ª—ã –¥–ª—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    files_to_archive = [
        'state_recovery.py',
        'sync_check.py', 
        'sync_monitor.py',
        'state_synchronizer.py'
    ]
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∞—Ä—Ö–∏–≤–∞
    archive_dir = Path('ARCHIVE/deprecated_sync_components')
    archive_dir.mkdir(parents=True, exist_ok=True)
    
    archived_count = 0
    
    for filename in files_to_archive:
        file_path = Path(filename)
        if file_path.exists():
            archive_path = archive_dir / filename
            
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –µ—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∞—Ä—Ö–∏–≤–µ
            if archive_path.exists():
                counter = 1
                while (archive_dir / f"{filename}.{counter}").exists():
                    counter += 1
                archive_path = archive_dir / f"{filename}.{counter}"
            
            try:
                shutil.move(str(file_path), str(archive_path))
                print(f"üì¶ {filename} -> ARCHIVE/deprecated_sync_components/{archive_path.name}")
                archived_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è {filename}: {e}")
        else:
            print(f"‚ö†Ô∏è {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
    
    print(f"\n‚úÖ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ {archived_count} —Ñ–∞–π–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ unified_sync.py
    if Path('unified_sync.py').exists():
        print("‚úÖ unified_sync.py —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        print("‚ùå unified_sync.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    create_compatibility_aliases()
    
    print("\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:")
    print("-" * 50)
    print("1. –í–º–µ—Å—Ç–æ state_recovery.py –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python3 unified_sync.py --status")
    print("   python3 unified_sync.py --force")
    print("")
    print("2. –í–º–µ—Å—Ç–æ sync_check.py –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python3 unified_sync.py --status")
    print("")
    print("3. –í–º–µ—Å—Ç–æ sync_monitor.py –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python3 unified_sync.py --status")
    print("")
    print("4. –í –∫–æ–¥–µ –∑–∞–º–µ–Ω–∏—Ç–µ –∏–º–ø–æ—Ä—Ç—ã:")
    print("   from state_recovery import ... -> from unified_sync import ...")
    print("   from orders_synchronizer import ... -> from unified_sync import ...")
    print("")
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    
    return True


def create_compatibility_aliases():
    """–°–æ–∑–¥–∞–µ—Ç –∞–ª–∏–∞—Å—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
    
    aliases = {
        'state_recovery.py': '''#!/usr/bin/env python3
"""
DEPRECATED: –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ unified_sync.py
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python3 unified_sync.py --status –∏–ª–∏ --force
"""
import sys
print("‚ö†Ô∏è state_recovery.py —É—Å—Ç–∞—Ä–µ–ª!")
print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python3 unified_sync.py --status")
sys.exit(1)
''',
        
        'sync_check.py': '''#!/usr/bin/env python3
"""
DEPRECATED: –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ unified_sync.py
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python3 unified_sync.py --status
"""
import sys
print("‚ö†Ô∏è sync_check.py —É—Å—Ç–∞—Ä–µ–ª!")
print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python3 unified_sync.py --status")
sys.exit(1)
''',
        
        'sync_monitor.py': '''#!/usr/bin/env python3
"""
DEPRECATED: –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ unified_sync.py
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python3 unified_sync.py --status
"""
import sys
print("‚ö†Ô∏è sync_monitor.py —É—Å—Ç–∞—Ä–µ–ª!")
print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python3 unified_sync.py --status")
sys.exit(1)
'''
    }
    
    for filename, content in aliases.items():
        try:
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"üîó –°–æ–∑–¥–∞–Ω –∞–ª–∏–∞—Å: {filename}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–ª–∏–∞—Å–∞ {filename}: {e}")


def update_imports_in_files():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö —Å–∏—Å—Ç–µ–º—ã"""
    
    files_to_update = [
        'ticker_monitor.py',
        'order_executor.py', 
        'orders_watchdog.py'
    ]
    
    import_replacements = {
        'from state_recovery import': 'from unified_sync import',
        'from orders_synchronizer import': 'from unified_sync import',
        'from sync_check import': 'from unified_sync import',
        'from sync_monitor import': 'from unified_sync import',
        'state_recovery.': 'unified_sync.',
        'orders_sync.': 'unified_sync.',
        'StateRecoveryManager': 'UnifiedSynchronizer',
        'synchronize_before_startup': 'sync_before_startup'
    }
    
    print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö...")
    
    updated_files = 0
    
    for filename in files_to_update:
        file_path = Path(filename)
        if not file_path.exists():
            print(f"‚ö†Ô∏è {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            continue
        
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            original_content = content
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã
            for old_import, new_import in import_replacements.items():
                if old_import in content:
                    content = content.replace(old_import, new_import)
                    print(f"   üìù {filename}: {old_import} -> {new_import}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if content != original_content:
                # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
                backup_path = file_path.with_suffix(f'{file_path.suffix}.backup')
                shutil.copy2(file_path, backup_path)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                
                print(f"‚úÖ {filename} –æ–±–Ω–æ–≤–ª–µ–Ω (—Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path.name})")
                updated_files += 1
            else:
                print(f"üìÑ {filename} –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {filename}: {e}")
    
    print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_files} —Ñ–∞–π–ª–æ–≤")


if __name__ == "__main__":
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    import sys
    
    if len(sys.argv) > 1 and sys.argv[1] == "--update-imports":
        update_imports_in_files()
    else:
        print("üöÄ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
        print("")
        
        user_input = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é? (y/N): ")
        if user_input.lower() in ['y', 'yes', '–¥–∞', '–¥']:
            if migrate_to_unified_sync():
                print("\nüîÑ –û–±–Ω–æ–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã –≤ —Ñ–∞–π–ª–∞—Ö? (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
                user_input2 = input("–û–±–Ω–æ–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã? (y/N): ")
                if user_input2.lower() in ['y', 'yes', '–¥–∞', '–¥']:
                    update_imports_in_files()
                    
                print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–∞–Ω–¥–æ–π:")
                print("   python3 unified_sync.py --status")
            else:
                print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫")
        else:
            print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
