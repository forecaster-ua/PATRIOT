#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Binance –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
"""
import config
from binance.client import Client

print(f"üîß –†–µ–∂–∏–º: {config.NETWORK_MODE}")
print(f"üß™ Testnet: {config.BINANCE_TESTNET}")
print(f"üîë API Key: {config.BINANCE_API_KEY[:20]}...")
print(f"üîê Secret: {config.BINANCE_API_SECRET[:20]}...")

try:
    client = Client(
        api_key=config.BINANCE_API_KEY,
        api_secret=config.BINANCE_API_SECRET,
        testnet=config.BINANCE_TESTNET
    )
    
    # –î–ª—è testnet —Ñ—å—é—á–µ—Ä—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º futures_account()
    if config.BINANCE_TESTNET:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—å—é—á–µ—Ä—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç (TESTNET)...")
        account = client.futures_account()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üí∞ –ë–∞–ª–∞–Ω—Å: {account['totalWalletBalance']} USDT")
        print(f"üíµ –î–æ—Å—Ç—É–ø–Ω–æ: {account['availableBalance']} USDT")
    else:
        print("‚ö° –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–æ—Ç –∞–∫–∫–∞—É–Ω—Ç (MAINNET)...")
        account = client.get_account()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞: {account['accountType']}")
        
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å USDT
        balances = [b for b in account['balances'] if float(b['free']) > 0]
        print(f"üí∞ –ê–∫—Ç–∏–≤–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã: {len(balances)}")
        
        for balance in balances:
            if balance['asset'] == 'USDT':
                print(f"  üíµ USDT: {balance['free']}")
            
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
