"""
Simple Launcher - –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã PATRIOT
========================================================

–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã:
- ticker_monitor (–∞–Ω–∞–ª–∏–∑ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)
- quick_test (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)

–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–µ–∑ —Å–ª–æ–∂–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞–º–∏.

Author: HEDGER
Version: 2.0 - Simplified
"""

import sys
import logging
from pathlib import Path

# –ò–º–ø–æ—Ä—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
from ticker_monitor import TickerMonitor
from utils import logger
import config

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
    if not hasattr(config, 'BINANCE_API_KEY') or not config.BINANCE_API_KEY:
        print(f"‚ùå Binance API –∫–ª—é—á–∏ –¥–ª—è {config.NETWORK_MODE} –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        print(f"\nüîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è {config.NETWORK_MODE}:")
        if config.BINANCE_TESTNET:
            print("  BINANCE_TESTNET_API_KEY=your_testnet_api_key")
            print("  BINANCE_TESTNET_API_SECRET=your_testnet_api_secret")
        else:
            print("  BINANCE_MAINNET_API_KEY=your_production_api_key")
            print("  BINANCE_MAINNET_API_SECRET=your_production_api_secret")
        print("\n–ò–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª —Ç–∏–∫–µ—Ä–æ–≤
    tickers_file = Path(config.DEFAULT_TICKERS_FILE)
    if not tickers_file.exists():
        print(f"‚ùå –§–∞–π–ª —Ç–∏–∫–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {tickers_file}")
        return False
    
    print(f"‚úÖ –†–µ–∂–∏–º: {config.NETWORK_MODE}")
    print(f"‚úÖ API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    print(f"‚úÖ –§–∞–π–ª —Ç–∏–∫–µ—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω: {tickers_file}")
    return True

def show_menu():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    print("\n" + "="*50)
    print("üöÄ PATRIOT TRADING SYSTEM")
    print("="*50)
    print("1. üìä –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–∏–∫–µ—Ä–æ–≤ (ticker_monitor)")
    print("2. ‚ö° –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º (quick_test)")
    print("3. üîß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É")
    print("4. üìÑ –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å")
    print("0. ‚ùå –í—ã—Ö–æ–¥")
    print("="*50)

def run_ticker_monitor():
    """–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–∏–∫–µ—Ä–æ–≤"""
    try:
        print("\nüéº –ó–∞–ø—É—Å–∫ Ticker Monitor...")
        logger.info("Starting Ticker Monitor from launcher")
        
        monitor = TickerMonitor(
            tickers_file=config.DEFAULT_TICKERS_FILE,
            max_workers=config.MAX_WORKERS,
            ticker_delay=config.TICKER_DELAY
        )
        monitor.run()
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
        logger.info("Ticker Monitor stopped by user")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
        logger.error(f"Ticker Monitor error: {e}")

def run_quick_test():
    """–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    try:
        print("\n‚ö° –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...")
        import subprocess
        result = subprocess.run([sys.executable, "quick_test.py"], 
                              cwd=Path.cwd())
        if result.returncode != 0:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ quick_test.py")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

def show_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:")
    print("-" * 30)
    print(f"üåê –†–µ–∂–∏–º —Å–µ—Ç–∏: {config.NETWORK_MODE}")
    print(f"üìÅ –§–∞–π–ª —Ç–∏–∫–µ—Ä–æ–≤: {config.DEFAULT_TICKERS_FILE}")
    print(f"üë• –ú–∞–∫—Å. workers: {config.MAX_WORKERS}")
    print(f"‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞: {config.TICKER_DELAY}s")
    print(f"üìã –¢–∞–π–º—Ñ—Ä–µ–π–º—ã: {', '.join(config.TIMEFRAMES)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
    print(f"\nüìù –õ–æ–≥–∏:")
    print(f"  Signals: {config.LOG_FILE}")
    print(f"  Binance: {config.BINANCE_LOG_FILE}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ª–∞—É–Ω—á–µ—Ä–∞"""
    try:
        print("üöÄ –ü—Ä–æ—Å—Ç–æ–π –ª–∞—É–Ω—á–µ—Ä PATRIOT")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        if not check_environment():
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            return
        
        # –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –º–µ–Ω—é
        while True:
            try:
                show_menu()
                choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
                
                if choice == "1":
                    run_ticker_monitor()
                elif choice == "2":
                    run_quick_test()
                elif choice == "3":
                    check_environment()
                elif choice == "4":
                    show_status()
                elif choice == "0":
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                    
            except KeyboardInterrupt:
                print("\nüëã –í—ã—Ö–æ–¥ –ø–æ Ctrl+C")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –º–µ–Ω—é: {e}")
                
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.error(f"Critical launcher error: {e}")

if __name__ == "__main__":
    main()
